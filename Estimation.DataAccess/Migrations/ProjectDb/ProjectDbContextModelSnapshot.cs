// <auto-generated />
using Estimation.DataAccess;
using Estimation.Domain.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Estimation.DataAccess.Migrations.ProjectDb
{
    [DbContext(typeof(ProjectDbContext))]
    partial class ProjectDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Estimation.DataAccess.Models.MaterialGroupDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("GroupCode")
                        .IsRequired();

                    b.Property<string>("GroupName")
                        .IsRequired();

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<string>("MaterialType");

                    b.Property<int?>("ParentGroupId");

                    b.Property<int>("ProjectId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("MaterialGroup");
                });

            modelBuilder.Entity("Estimation.DataAccess.Models.ProjectInfoDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("ConstructionPlace");

                    b.Property<string>("ConstructionScale");

                    b.Property<string>("ConstructionTerm");

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("CurrencyUnit");

                    b.Property<string>("GeneralContractor");

                    b.Property<string>("KindOfWork");

                    b.Property<decimal>("LabourCost");

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<bool>("MiscellaneousIsUsePercentage");

                    b.Property<decimal>("MiscellaneousManual");

                    b.Property<decimal>("MiscellaneousPercentage");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Owner");

                    b.Property<string>("Remark");

                    b.Property<string>("SubmitBy");

                    b.Property<bool>("TransportationIsUsePercentage");

                    b.Property<decimal>("TransportationManual");

                    b.Property<decimal>("TransportationPercentage");

                    b.HasKey("Id");

                    b.ToTable("ProjectInfo");
                });

            modelBuilder.Entity("Estimation.DataAccess.Models.ProjectMaterialDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Class");

                    b.Property<int>("Code");

                    b.Property<string>("CodeAsString")
                        .IsRequired();

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<decimal>("Fittings");

                    b.Property<DateTime?>("LastModifiedDate");

                    b.Property<decimal>("ListPrice");

                    b.Property<decimal>("Manpower");

                    b.Property<int>("MaterialGroupId");

                    b.Property<string>("MaterialType");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<decimal>("NetPrice");

                    b.Property<decimal>("OfferPrice");

                    b.Property<decimal>("Painting");

                    b.Property<string>("Remark");

                    b.Property<decimal>("Supporting");

                    b.Property<string>("Unit");

                    b.HasKey("Id");

                    b.HasIndex("MaterialGroupId");

                    b.ToTable("ProjectMaterials");
                });

            modelBuilder.Entity("Estimation.DataAccess.Models.MaterialGroupDb", b =>
                {
                    b.HasOne("Estimation.DataAccess.Models.ProjectInfoDb", "ProjectInfo")
                        .WithMany("MaterialGroups")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Estimation.DataAccess.Models.ProjectMaterialDb", b =>
                {
                    b.HasOne("Estimation.DataAccess.Models.MaterialGroupDb", "MaterialGroup")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
